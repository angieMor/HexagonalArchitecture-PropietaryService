plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
}

group = 'com.PowerUp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springBootVersion = "2.7.8"
	mapstructVersion = "1.5.2.Final"
	lombokVersion = "1.18.24"
	lombokMapstructBindingVersion = "0.2.0"
	openApiVersion = "1.6.11"
}

dependencies {
//	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
//	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
//	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
//
//	compileOnly "org.projectlombok:lombok:${lombokVersion}"
//
//	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
//	runtimeOnly 'org.postgresql:postgresql'
//	implementation 'io.springfox:springfox-swagger2:2.4.0'
//	implementation 'io.springfox:springfox-swagger-ui:2.4.0'
//	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
//	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
//
//	implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
//	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openApiVersion}"
//	implementation "org.springframework.security:spring-security-crypto" // encriptamiento
//	implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
//
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.4' // comsumir micro HTTP
//	implementation 'io.github.openfeign:feign-okhttp:9.2.0' // conexion micro
//	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
//	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
//
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
//	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
//
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
//
//	implementation 'org.springframework.security:spring-security-core'
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
//	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"

	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	implementation "org.springframework.security:spring-security-crypto"
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.4'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.4'
	implementation 'io.github.openfeign:feign-okhttp:9.2.0'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openApiVersion}"
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.4'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openApiVersion}"


	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

	runtimeOnly "org.postgresql:postgresql"








}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}
